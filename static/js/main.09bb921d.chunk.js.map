{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js","img/matrix.jpg"],"names":["createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","_templateObject","bgImage","StyledTetris","_templateObject2","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","_useState","useState","_useState2","Object","slicedToArray","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","concat","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","StyledStage_templateObject","props","height","width","StyledCell","StyledCell_templateObject","type","Cell","react_default","a","createElement","Stage","components_Cell","key","StyledDisplay","StyledDisplay_templateObject","gameOver","Display","text","StyledStartButton","button","StartButton_templateObject","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","objectSpread","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","console","log","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","_ref2","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","components_Stage","components_Display","components_StartButton","App","className","components_Tetris","Boolean","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.09bb921d.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  // THIS IS SLOWER!!!\r\n  // return player.tetromino.some((row, y) =>\r\n  //   row.some((cell, x) => {\r\n  //     if (cell !== 0) {\r\n  //       return (\r\n  //         !stage[y + player.pos.y + moveY] ||\r\n  //         !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n  //         stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n  //           'clear'\r\n  //       );\r\n  //     }\r\n  //     return false;\r\n  //   })\r\n  // );\r\n\r\n  // Using for loops to be able to return (and break). Not possible with forEach\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n      // 1. Check that we're on an actual Tetromino cell\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          // 2. Check that our move is inside the game areas height (y)\r\n          // That we're not go through bottom of the play area\r\n          !stage[y + player.pos.y + moveY] ||\r\n          // 3. Check that our move is inside the game areas width (x)\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          // 4. Check that the cell wer'e moving to isn't set to clear\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            'clear'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // 5. If everything above is false\r\n  return false;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/matrix.jpg';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: url(${bgImage}) #000;\r\n    background-size: cover;\r\n    overflow: hidden;\r\n    `\r\n\r\nexport const StyledTetris = styled.div`\r\n    display: felx;\r\n    align-items: flex-start;\r\n    padding: 40px;\r\n    margin: 0 auto;\r\n    max-width: 900px;\r\n\r\n    aside {\r\n        width: 100%;\r\n        max-width: 200px;\r\n        display: block;\r\n        padding: 0 20px;\r\n       }\r\n    `;","export const TETROMINOS = {\r\n    0: { shape: [[0]], color: '0,0,0' },\r\n    I:{\r\n        shape: [\r\n                 [0, 'I', 0, 0],\r\n                 [0, 'I', 0, 0],\r\n                 [0, 'I', 0, 0],\r\n                 [0, 'I', 0, 0]\r\n               ],\r\n               color: '9, 168, 157',\r\n    },\r\n\r\n    J:{\r\n        shape: [\r\n                 [0, 'J', 0],\r\n                 [0, 'J', 0],\r\n                 ['J', 'J', 0]  \r\n               ],\r\n        color: '13, 235, 16',\r\n    },\r\n\r\n    L:{\r\n        shape: [\r\n                 [0, 'L', 0],\r\n                 [0, 'L', 0],\r\n                 [0, 'L', 'L']\r\n                 \r\n               ],\r\n        color: '4, 68, 5',\r\n    },\r\n\r\n    O:{\r\n        shape: [\r\n                 ['O', 'O'],\r\n                 ['O', 'O'],  \r\n               ],\r\n        color: '148, 239, 149',\r\n    },\r\n\r\n    S:{\r\n        shape: [\r\n                 [0, 'S', 'S'],\r\n                 ['S', 'S', 0],\r\n                 [0, 0, 0]\r\n                 \r\n               ],\r\n        color: '48, 211, 56',\r\n    },\r\n\r\n    T:{\r\n        shape: [\r\n                 [0, 0, 0],\r\n                 ['T', 'T', 'T'],\r\n                 [0, 'T', 0]\r\n                 \r\n               ],\r\n        color: '23, 156, 25',\r\n    },\r\n\r\n    Z:{\r\n        shape: [\r\n                 ['Z', 'Z', 0],\r\n                 [0, 'Z', 'Z'],\r\n                 [0, 0, 0]                 \r\n               ],\r\n        color: '52, 224, 54',\r\n    },\r\n\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino = \r\n        tetrominos[Math.floor(Math.random() *tetrominos.length)];\r\n    return TETROMINOS[randTetromino];\r\n}","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return ack;\r\n        }\r\n        ack.push(row);\r\n        return ack;\r\n      }, []);\r\n\r\n    const updateStage = prevStage => {\r\n      // First flush the stage\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\r\n      );\r\n\r\n      // Then draw the tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      // Then check if we got some score if collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n      return newStage;\r\n    };\r\n\r\n    // Here are the updates\r\n    setStage(prev => updateStage(prev));\r\n  }, [\r\n    player.collided,\r\n    player.pos.x,\r\n    player.pos.y,\r\n    player.tetromino,\r\n    resetPlayer,\r\n  ]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(\r\n        ${props => props.height},\r\n        calc(25vw / ${props => props.width})\r\n    );\r\n    grid-template-columns: repeat(${props => props.width}, 1fr);\r\n    grid-gap: 1px;\r\n    border: 2px solid #333;\r\n    width: 100%;\r\n    max-width: 25vw;\r\n    background: #111;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n   width: auto; \r\n   background: rgba(${props => props.color}, 0.8);\r\n   border: ${props => (props.type === 0 ? '0px solid' : '4px solid')}\r\n   border-bottom-color: rgba(${props => props.color}, 0.1);\r\n   border-right-color: rgba(${props => props.color}, 1);\r\n   border-top-color: rgba(${props => props.color}, 1);\r\n   border-left-color: rgba(${props => props.color}, 0.3);\r\n`","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\n\r\nconst Cell = ({ type }) =>(\r\n   <StyledCell type={type} color={TETROMINOS[type].color} />\r\n)\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport { StyledStage } from './styles/StyledStage';\r\n\r\nimport Cell from './Cell';\r\n\r\nconst Stage = ({ stage }) => (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n    </StyledStage>\r\n)\r\n\r\nexport  default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 0 20px 0;\r\n    padding: 20px;\r\n    border: 4px solid #333;\r\n    min-heigh: 30px;\r\n    width: 100%;\r\n    border-radius: 20px;\r\n    color: ${props => (props.gameOver ? 'red' : '#999')};\r\n    background: #000;\r\n    font-family: Pixel, Arial, Helvetica, sans-sesrif;\r\n    font-size: 0.8rem;\r\n`;","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text}) => (\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\n\r\nexport default Display; ","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: white;\r\n  background: #333;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StartButton = ({ callback }) => (\r\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n);\r\n\r\nexport default StartButton;\r\n","import React, { useState } from 'react';\r\n\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n// Custom Hooks\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n\r\n// Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\r\n    rowsCleared\r\n  );\r\n\r\n  console.log('re-render');\r\n\r\n  const movePlayer = dir => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n    }\r\n  };\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      // Activate the interval again when user releases down arrow.\r\n      if (keyCode === 40) {\r\n        setDropTime(1000 / (level + 1));\r\n      }\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    // Reset everything\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setScore(0);\r\n    setLevel(0);\r\n    setRows(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  const drop = () => {\r\n    // Increase level when player has cleared 10 rows\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel(prev => prev + 1);\r\n      // Also increase speed\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n      // Game over!\r\n      if (player.pos.y < 1) {\r\n        console.log('GAME OVER!!!');\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  };\r\n\r\n  const dropPlayer = () => {\r\n    // We don't need to run the interval when we use the arrow down to\r\n    // move the tetromino downwards. So deactivate it for now.\r\n    setDropTime(null);\r\n    drop();\r\n  };\r\n\r\n  // This one starts the game\r\n  // Custom hook by Dan Abramov\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime);\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1);\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledTetrisWrapper\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyDown={e => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text=\"Game Over\" />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  function rotate(matrix, dir) {\r\n    // Make the rows to become cols (transpose)\r\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\r\n    // Reverse each row to get a rotaded matrix\r\n    if (dir > 0) return mtrx.map(row => row.reverse());\r\n    return mtrx.reverse();\r\n  }\r\n\r\n  function playerRotate(stage, dir) {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos;\r\n        return;\r\n      }\r\n    }\r\n    setPlayer(clonedPlayer);\r\n  }\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided,\r\n    }));\r\n  };\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    });\r\n  }, []);\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const calcScore = useCallback(() => {\r\n    // We have score\r\n    if (rowsCleared > 0) {\r\n      // This is how original Tetris score is calculated\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows(prev => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};\r\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  \"https://dashboard.heroku.com/apps/victortetris\"\n\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/matrix.a7e88d85.jpg\";"],"sourceRoot":""}